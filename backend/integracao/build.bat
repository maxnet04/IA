@echo off
echo ========================================
echo    SUAT Database Manager - Build
echo    .NET Framework 4.7 - Console App
echo ========================================
echo.

:: Tentar usar dotnet build primeiro (mais moderno e confi√°vel)
echo üîÑ Tentando compila√ß√£o com dotnet build...
dotnet build --configuration Release
if errorlevel 1 (
    echo ‚ùå dotnet build falhou, tentando MSBuild...
    
    :: Definir caminho do MSBuild para Visual Studio 2019 Build Tools
    set "MSBUILD_PATH=C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin\MSBuild.exe"

    :: Verificar se MSBuild est√° dispon√≠vel no caminho espec√≠fico
    if not exist "%MSBUILD_PATH%" (
        echo ‚ùå MSBuild n√£o encontrado em: %MSBUILD_PATH%
        echo Verificando caminhos alternativos...
        
        :: Tentar caminhos alternativos comuns
        set "MSBUILD_PATH=C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\15.0\Bin\MSBuild.exe"
        if not exist "%MSBUILD_PATH%" (
            set "MSBUILD_PATH=C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Current\Bin\MSBuild.exe"
        )
        if not exist "%MSBUILD_PATH%" (
            set "MSBUILD_PATH=C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\MSBuild\Current\Bin\MSBuild.exe"
        )
        if not exist "%MSBUILD_PATH%" (
            set "MSBUILD_PATH=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe"
        )
        if not exist "%MSBUILD_PATH%" (
            echo ‚ùå MSBuild n√£o encontrado em nenhum caminho conhecido!
            echo Por favor, verifique a instala√ß√£o do Visual Studio Build Tools.
            echo Download: https://visualstudio.microsoft.com/downloads/
            pause
            exit /b 1
        )
    )

    echo ‚úÖ MSBuild encontrado em: %MSBUILD_PATH%
    echo.

    :: Restaurar depend√™ncias NuGet (opcional - pode n√£o ser necess√°rio para projetos simples)
    echo üîÑ Verificando depend√™ncias NuGet...
    nuget restore SuatDatabaseManager.vbproj >nul 2>&1
    if errorlevel 1 (
        echo ‚ö†Ô∏è  Aviso: N√£o foi poss√≠vel restaurar depend√™ncias NuGet
        echo    Continuando com a compila√ß√£o...
    )

    :: Compilar projeto
    echo üîÑ Compilando projeto com MSBuild...
    "%MSBUILD_PATH%" SuatDatabaseManager.vbproj /p:Configuration=Release /p:Platform="Any CPU"
    if errorlevel 1 (
        echo ‚ùå Erro na compila√ß√£o
        pause
        exit /b 1
    )
) else (
    echo ‚úÖ Compila√ß√£o com dotnet build conclu√≠da com sucesso!
)

:: Copiar execut√°vel para pasta dist
echo üîÑ Preparando distribui√ß√£o...
if not exist "dist" mkdir dist

:: Verificar se o execut√°vel foi gerado pelo dotnet build
if exist "bin\Release\net47\SuatDatabaseManager.exe" (
    copy "bin\Release\net47\SuatDatabaseManager.exe" "dist\" >nul
    copy "bin\Release\net47\*.dll" "dist\" >nul
    copy "bin\Release\net47\*.config" "dist\" >nul
    
    :: Copiar DLLs nativas do SQLite
    if exist "bin\Release\net47\x64" (
        if not exist "dist\x64" mkdir dist\x64
        copy "bin\Release\net47\x64\*.dll" "dist\x64\" >nul
        echo ‚úÖ DLLs x64 copiadas
    )
    if exist "bin\Release\net47\x86" (
        if not exist "dist\x86" mkdir dist\x86
        copy "bin\Release\net47\x86\*.dll" "dist\x86\" >nul
        echo ‚úÖ DLLs x86 copiadas
    )
    
    echo ‚úÖ Execut√°vel copiado de bin\Release\net47\
) else if exist "bin\Release\SuatDatabaseManager.exe" (
    copy "bin\Release\SuatDatabaseManager.exe" "dist\" >nul
    copy "bin\Release\*.dll" "dist\" >nul
    copy "bin\Release\*.config" "dist\" >nul
    
    :: Copiar DLLs nativas do SQLite
    if exist "bin\Release\x64" (
        if not exist "dist\x64" mkdir dist\x64
        copy "bin\Release\x64\*.dll" "dist\x64\" >nul
        echo ‚úÖ DLLs x64 copiadas
    )
    if exist "bin\Release\x86" (
        if not exist "dist\x86" mkdir dist\x86
        copy "bin\Release\x86\*.dll" "dist\x86\" >nul
        echo ‚úÖ DLLs x86 copiadas
    )
    
    echo ‚úÖ Execut√°vel copiado de bin\Release\
) else (
    echo ‚ùå Execut√°vel n√£o encontrado!
    echo Verificando pastas dispon√≠veis...
    dir bin\Release\ /s /b | findstr "SuatDatabaseManager.exe"
    pause
    exit /b 1
)

echo.
echo ‚úÖ Build conclu√≠do com sucesso!
echo üìÅ Execut√°vel gerado em: dist\SuatDatabaseManager.exe
echo.

:: Executar testes autom√°ticos
echo ========================================
echo    EXECUTANDO TESTES AUTOM√ÅTICOS
echo ========================================
echo.

:: Teste 1: Conex√£o com banco
echo üîå Teste 1: Verificando conex√£o com banco...
"dist\SuatDatabaseManager.exe" connect > test_connect.log 2>&1
if errorlevel 1 (
    echo ‚ùå Teste de conex√£o FALHOU
    echo    Verifique o arquivo test_connect.log para detalhes
) else (
    echo ‚úÖ Teste de conex√£o PASSOU
)

:: Teste 2: Verifica√ß√£o de estrutura
echo üìä Teste 2: Verificando estrutura do banco...
"dist\SuatDatabaseManager.exe" verify > test_verify.log 2>&1
if errorlevel 1 (
    echo ‚ùå Teste de verifica√ß√£o FALHOU
    echo    Verifique o arquivo test_verify.log para detalhes
) else (
    echo ‚úÖ Teste de verifica√ß√£o PASSOU
)

:: Teste 3: Query simples
echo üîç Teste 3: Executando query de teste...
"dist\SuatDatabaseManager.exe" query "SELECT COUNT(*) as total FROM incidents" > test_query.log 2>&1
if errorlevel 1 (
    echo ‚ùå Teste de query FALHOU
    echo    Verifique o arquivo test_query.log para detalhes
) else (
    echo ‚úÖ Teste de query PASSOU
)

:: Teste 4: Sincroniza√ß√£o (opcional - pode demorar)
echo üîÑ Teste 4: Testando sincroniza√ß√£o (opcional)...
echo    Este teste pode demorar alguns segundos...
"dist\SuatDatabaseManager.exe" sync > test_sync.log 2>&1
if errorlevel 1 (
    echo ‚ùå Teste de sincroniza√ß√£o FALHOU
    echo    Verifique o arquivo test_sync.log para detalhes
) else (
    echo ‚úÖ Teste de sincroniza√ß√£o PASSOU
)

echo.
echo ========================================
echo    RESUMO DOS TESTES
echo ========================================
echo.
echo Logs de teste salvos em:
echo   - test_connect.log
echo   - test_verify.log
echo   - test_query.log
echo   - test_sync.log
echo.

:: Mostrar resultados dos logs
echo üìã √öltimas linhas dos logs de teste:
echo.
echo --- Conex√£o ---
if exist test_connect.log (
    powershell "Get-Content test_connect.log | Select-Object -Last 3"
) else (
    echo Log n√£o encontrado
)
echo.

echo --- Verifica√ß√£o ---
if exist test_verify.log (
    powershell "Get-Content test_verify.log | Select-Object -Last 3"
) else (
    echo Log n√£o encontrado
)
echo.

echo --- Query ---
if exist test_query.log (
    powershell "Get-Content test_query.log | Select-Object -Last 3"
) else (
    echo Log n√£o encontrado
)
echo.

echo --- Sincroniza√ß√£o ---
if exist test_sync.log (
    powershell "Get-Content test_sync.log | Select-Object -Last 3"
) else (
    echo Log n√£o encontrado
)
echo.

echo ========================================
echo    USO DO SISTEMA
echo ========================================
echo.
echo Para executar manualmente:
echo   cd dist
echo   SuatDatabaseManager.exe
echo.
echo Comandos dispon√≠veis:
echo   SuatDatabaseManager.exe connect
echo   SuatDatabaseManager.exe verify
echo   SuatDatabaseManager.exe sync
echo   SuatDatabaseManager.exe query "SELECT COUNT(*) FROM incidents"
echo   SuatDatabaseManager.exe help
echo.

pause
